Admin
    darf alles
    darf Bewertungen pro User löschen


eingeloggter User
    kann sein PW ändern
    kann sich ein- und ausloggen
    darf restaurantliste mit Durchschnittsbewertungen sehen
    darf pro Restaurant eine Bewertung abgeben

Anonymous
     darf restaurantliste mit Durchschnittsbewertungen sehen
     darf sich registrieren lassen





     Aufgaben zum Erstellen der ersten Seite: DEFAULTSEITE für nicht eingeloggten User/Admin:
     1. Löschen und Ändernspalte entfernen, anzeige restaurant kopieren, standard in index umstellen                4'
     2. statt Benotung soll die Durchschnittsbenotung angezeigt werden
        2.1 in db speichern: user bewertet restaurant mit Note (Verknüpfungstabelle)
            2.1.1 bewertungsportal.sql erweitern  (create Table einschliesslich ForeinKeys)                         10'
            2.1.2 Testdaten einfügen (6 Testdaten)                                                                  3'
        2.2 zugehörige Klasse erstellen mit getterundSetter / Construktor /                                         5'
        2.3. Methoden schreiben
            2.3.1 CRUD Methoden nur Select nötig (getDataFromDatabase)                                              5'
        2.4 class Restaurant erweitern mit getDurchschnittsbewertung()
            2.4.1 Methode zur Abfrage der Durchschnittsbenotung je restaurant erstellen                             30'
                input: restaurant_id, output: double (bei Ausgabe runden auf 1 Stelle nach dem Komma)               10'

        2.x index erweitern

     3. die 3 oberen und der untere Link sollen entfernt werden (auskommentieren)                                   5'
     4. Einlogglink erstellen, Registrierlink erstellen                                                             8'
                                                                                                                        80'
     Puffer 30%                                                                                                         27'
     gesamte Zeit                                                                                                      107'
     Sortieren nach Spalte kommt später



     Seite Erstellen registrieren
    1. view:
        1.1 form-tag                                                                                                2'
        1.2 3 inputfelder                                                                                           3'
        1.3 submit brauch hidden-Feld action="registrieren"                                                         2'
        1.4 Fehlermeldungsfeld ausgeben, vorher festlegen standard-Wert für $fehlermeldung ist Leerstring
    2. POST-Variablen in index verarbeiten
        2.1 in index abfragen elseif $action = registrieren schreiben                                               2'
        2.2 stimmen passwort und passwort 2 überein                                                                 2'
        2.2.1 nein: registrieren anzeigen mit Fehlermeldung: Passwörter stimmen nicht überein.                      4'
                $fehlermeldung erstellen mit obigen Inhalt
        2.2.2 bei erfolgreicher Registrierung user in db speichern, session starten user_id in $_SESSION
                schreiben


Wenn user registriert ist, soll die selbe Seite angezeigt werden, wie bei einem frisch eingeloggten User
1. Kopie von der Seite restaurantanzeigenDefault erweitern von anonymous
2. benötigte Änderungen
    2.1 statt einloggen und registrieren brauchen wir einen Link zum ausloggen
    2.2 Spalte mit eigenen Bewertungen hinzufügen

    2.3 Spalte mit Bewertungsknopf
    2.4 Übergabevariablen: restaurant_id, user_id?, action="bewertung anzeigen"


Einloggen:


Restaurant bewerten:
1. Link einbauen anstelle der 0 in eigene Bewertungen spalte bei 0
    1.1 Übergabevariablen restaurant_id action="eingabe"
2. restaurantändern aufrufen zum restaurant mit der richtigen id, mehrere inputfelder als Readonly kennzeichnen
3. speichern, dann wie im adminbereich
4. restaurantanzeigeDefault aufrufen

Buttons erstellen (einloggen, ausloggen, bewerten)

Restaurant soll anhand von 2 Buchstaben gefunden werden
Detail: wir brauchen ein Eingabefeld (Suchfeld) für den User
bei Klick auf einen Knopf wird die Datenbank abgefragt, ob es in der Spalte Restaurantname Einträge gibt, die diese 2 Buchstaben enthalten

- select * from restaurant where name LIKE '%er%'; sucht nach allem was "er" im namen hat ('%variable%')
- Eingabefeld mit form-tag
- im Index die POST-variablen überprüfen
- elseif $action === im index ergänzen
- Methode in Klasse Restaurant zum Auslesen
Aufrufen von getDataFromDatabase mit Parameter überladen mit Where ergänzen mit LIKE bauen im sql statement
Ergebnisse ausgeben mit print_r()


Anwendung um Rolle des Users erweitern:
1. Spalte in Tabelle hinzufügen
2. Attribut in Klasse hinzufügen
3. in Tabelle alle User bis auf einen zum reguser machen, den einzelnen zum admin
4. getRolle () erstellen
5. Konstruktor erweitern um Rolle
6. Beim Erstellen eines neuen users, ist er automatisch reguser
7. testen






